/* Copyright 2018 Pedro Cuadra - pjcuadra@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* WARNING: This file is automatically generated by raml2agl */
#include <service/ServiceRoverDrivingAuto.h>

ServiceRoverDrivingAuto::ServiceRoverDrivingAuto() {
  AFB_NOTICE("[ServiceRoverDrivingAuto] Constructor ");
}


/** Autogenrated doc for gobackward */
int ServiceRoverDrivingAuto::gobackward() {

  AFB_NOTICE("[ServiceRoverDrivingAuto] Gobackward");
  AFB_ERROR("Method Gobackward not implemented");

  return -1;
}

/** Autogenrated doc for goforward */
int ServiceRoverDrivingAuto::goforward() {

  AFB_NOTICE("[ServiceRoverDrivingAuto] Goforward");
  AFB_ERROR("Method Goforward not implemented");

  return -1;
}

/** Autogenrated doc for setspeed */
int ServiceRoverDrivingAuto::setspeed(const int in_speed) {

  AFB_NOTICE("[ServiceRoverDrivingAuto] Setspeed");
  AFB_ERROR("Method Setspeed not implemented");

  return -1;
}

/** Autogenrated doc for stop */
int ServiceRoverDrivingAuto::stop() {

  AFB_NOTICE("[ServiceRoverDrivingAuto] Stop");
  AFB_ERROR("Method Stop not implemented");

  return -1;
}

/** Autogenrated doc for turnleft */
int ServiceRoverDrivingAuto::turnleft() {

  AFB_NOTICE("[ServiceRoverDrivingAuto] Turnleft");
  AFB_ERROR("Method Turnleft not implemented");

  return -1;
}

/** Autogenrated doc for turnright */
int ServiceRoverDrivingAuto::turnright() {

  AFB_NOTICE("[ServiceRoverDrivingAuto] Turnright");
  AFB_ERROR("Method Turnright not implemented");

  return -1;
}
